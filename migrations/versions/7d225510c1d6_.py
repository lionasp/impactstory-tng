"""empty message

Revision ID: 7d225510c1d6
Revises: 
Create Date: 2017-07-06 16:18:16.568326

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d225510c1d6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('log_email',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('orcid_id', sa.Text(), nullable=True),
    sa.Column('sent', sa.DateTime(), nullable=True),
    sa.Column('contents', postgresql.JSONB(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_openness',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('orcid_id', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('num_products', sa.Integer(), nullable=True),
    sa.Column('num_fulltext', sa.Integer(), nullable=True),
    sa.Column('num_user_supplied_fulltext', sa.Integer(), nullable=True),
    sa.Column('num_any_oa', sa.Integer(), nullable=True),
    sa.Column('num_cc_by', sa.Integer(), nullable=True),
    sa.Column('num_cc_restricted', sa.Integer(), nullable=True),
    sa.Column('num_cc0_pd', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_temp_profile',
    sa.Column('orcid_id', sa.Text(), nullable=False),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('ip', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('num_products', sa.Integer(), nullable=True),
    sa.Column('num_posts', sa.Integer(), nullable=True),
    sa.Column('num_badges', sa.Integer(), nullable=True),
    sa.Column('percent_fulltext', sa.Float(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('orcid_id')
    )
    op.create_table('person',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('orcid_id', sa.Text(), nullable=True),
    sa.Column('given_names', sa.Text(), nullable=True),
    sa.Column('family_name', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('claimed_at', sa.DateTime(), nullable=True),
    sa.Column('orcid_api_raw_json', postgresql.JSONB(), nullable=True),
    sa.Column('fresh_orcid', sa.Boolean(), nullable=True),
    sa.Column('invalid_orcid', sa.Boolean(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('twitter', sa.Text(), nullable=True),
    sa.Column('twitter_creds', postgresql.JSONB(), nullable=True),
    sa.Column('campaign', sa.Text(), nullable=True),
    sa.Column('landing_page', sa.Text(), nullable=True),
    sa.Column('depsy_id', sa.Text(), nullable=True),
    sa.Column('depsy_percentile', sa.Float(), nullable=True),
    sa.Column('affiliation_name', sa.Text(), nullable=True),
    sa.Column('affiliation_role_title', sa.Text(), nullable=True),
    sa.Column('post_counts', postgresql.JSONB(), nullable=True),
    sa.Column('mendeley_sums', postgresql.JSONB(), nullable=True),
    sa.Column('num_products', sa.Integer(), nullable=True),
    sa.Column('num_posts', sa.Integer(), nullable=True),
    sa.Column('num_mentions', sa.Integer(), nullable=True),
    sa.Column('num_badges', sa.Integer(), nullable=True),
    sa.Column('openness', sa.Float(), nullable=True),
    sa.Column('events_emailed', postgresql.JSONB(), nullable=True),
    sa.Column('weekly_event_count', sa.Float(), nullable=True),
    sa.Column('monthly_event_count', sa.Float(), nullable=True),
    sa.Column('tweeted_quickly', sa.Boolean(), nullable=True),
    sa.Column('finished_wizard', sa.Boolean(), nullable=True),
    sa.Column('saw_opencon_landing_page', sa.Boolean(), nullable=True),
    sa.Column('num_fulltext', sa.Integer(), nullable=True),
    sa.Column('num_user_supplied_fulltext', sa.Integer(), nullable=True),
    sa.Column('num_any_oa', sa.Integer(), nullable=True),
    sa.Column('num_cc_by', sa.Integer(), nullable=True),
    sa.Column('num_cc_restricted', sa.Integer(), nullable=True),
    sa.Column('num_cc0_pd', sa.Integer(), nullable=True),
    sa.Column('coauthors', postgresql.JSONB(), nullable=True),
    sa.Column('promos', postgresql.JSONB(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('orcid_id')
    )
    op.create_table('refset',
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('cutoffs', postgresql.JSONB(), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('badge',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('orcid_id', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('percentile', sa.Float(), nullable=True),
    sa.Column('support', sa.Text(), nullable=True),
    sa.Column('products', postgresql.JSONB(), nullable=True),
    sa.ForeignKeyConstraint(['orcid_id'], ['person.orcid_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('doi', sa.Text(), nullable=True),
    sa.Column('orcid_id', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('journal', sa.Text(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('year', sa.Text(), nullable=True),
    sa.Column('authors', sa.Text(), nullable=True),
    sa.Column('authors_short', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('arxiv', sa.Text(), nullable=True),
    sa.Column('orcid_put_code', sa.Text(), nullable=True),
    sa.Column('orcid_importer', sa.Text(), nullable=True),
    sa.Column('orcid_api_raw_json', postgresql.JSONB(), nullable=True),
    sa.Column('altmetric_api_raw', postgresql.JSONB(), nullable=True),
    sa.Column('mendeley_api_raw', postgresql.JSONB(), nullable=True),
    sa.Column('altmetric_id', sa.Text(), nullable=True),
    sa.Column('altmetric_score', sa.Float(), nullable=True),
    sa.Column('post_counts', postgresql.JSONB(), nullable=True),
    sa.Column('post_details', postgresql.JSONB(), nullable=True),
    sa.Column('poster_counts', postgresql.JSONB(), nullable=True),
    sa.Column('event_dates', postgresql.JSONB(), nullable=True),
    sa.Column('user_supplied_fulltext_url', sa.Text(), nullable=True),
    sa.Column('fulltext_url', sa.Text(), nullable=True),
    sa.Column('license', sa.Text(), nullable=True),
    sa.Column('evidence', sa.Text(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['orcid_id'], ['person.orcid_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product')
    op.drop_table('badge')
    op.drop_table('refset')
    op.drop_table('person')
    op.drop_table('log_temp_profile')
    op.drop_table('log_openness')
    op.drop_table('log_email')
    # ### end Alembic commands ###
